// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  role     String? @default("user")

  UserProfile UserProfile?
}

model UserProfile {
  id        Int    @id @default(autoincrement())
  name      String
  email     String
  role      String
  avatarUrl String
  userId    Int    @unique
  user      User   @relation(fields: [userId], references: [id])
}

model Task {
  id               Int      @id @default(autoincrement())
  title            String
  description      String?
  active           Boolean  @default(true)
  deadline         DateTime
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userIdCreator    Int
  userIdSupervisor Int?
  usersIdAssociate Int[]

  comments Comment[]

  files File[]

  taskChecklists TaskChecklist[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  userId    Int
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])

  files File[]
}

model File {
  id           Int      @id @default(autoincrement())
  filename     String
  originalName String
  size         Int
  mimetype     String
  url          String
  uploadDate   DateTime @default(now())

  Comment Comment[]

  Task Task[]

  Message Message[]
}

model Message {
  id         Int     @id @default(autoincrement())
  content    String
  senderId   Int?
  timestamp  String
  roomId     String?
  receiverId Int?
  isRead     Boolean
  files      File[]
}

model ChatRoom {
  id              Int      @id @default(autoincrement())
  name            String
  createdBy       Int
  createdAt       DateTime @default(now())
  members         Int[]
  isDirectMessage Boolean?
}

model Notification {
  id        Int      @id @default(autoincrement())
  content   String
  read      Boolean  @default(false)
  userId    Int
  createdAt DateTime @default(now())
}

model TaskTemplate {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CheckListItem {
  id          Int           @id @default(autoincrement())
  text        String
  completed   Boolean       @default(false)
  checklistId Int
  checklist   TaskChecklist @relation(fields: [checklistId], references: [id])
}

model TaskChecklist {
  id     Int    @id @default(autoincrement())
  title  String
  taskId Int
  task   Task   @relation(fields: [taskId], references: [id])

  checklistItems CheckListItem[]
}
