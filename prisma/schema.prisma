// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String

  Task Task[]

  UserProfile UserProfile?
}

model UserProfile {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  email     String @unique
  userId    Int    @unique
  user      User   @relation(fields: [userId], references: [id])
}

model Task {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?
  completed      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userIdCreator  Int
  userCreator    User     @relation(fields: [userIdCreator], references: [id])
  userIdAssignee Int?

  Comment Comment[]

  File File[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
}

model File {
  id           Int      @id @default(autoincrement())
  filename     String
  originalName String
  size         Int
  mimetype     String
  url          String
  uploadDate   DateTime @default(now())
  taskId       Int

  Task Task @relation(fields: [taskId], references: [id])
}
